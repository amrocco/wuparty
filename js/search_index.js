var search_data = {"index":{"searchIndex":["httparty","classmethods","request","wuparty","connectionerror","form","httperror","report","user","[]()","[]()","[]()","add_webhook()","add_webhook()","comments()","count()","delete_webhook()","delete_webhook()","entries()","fields()","fields()","flattened_fields()","form()","forms()","login()","new()","report()","reports()","submit()","users()","widgets()","readme"],"longSearchIndex":["httparty","httparty::classmethods","httparty::request","wuparty","wuparty::connectionerror","wuparty::form","wuparty::httperror","wuparty::report","wuparty::user","wuparty::form#[]()","wuparty::report#[]()","wuparty::user#[]()","wuparty#add_webhook()","wuparty::form#add_webhook()","wuparty::form#comments()","wuparty::form#count()","wuparty#delete_webhook()","wuparty::form#delete_webhook()","wuparty::form#entries()","wuparty::form#fields()","wuparty::report#fields()","wuparty::form#flattened_fields()","wuparty#form()","wuparty#forms()","wuparty::login()","wuparty::new()","wuparty#report()","wuparty#reports()","wuparty::form#submit()","wuparty#users()","wuparty::report#widgets()",""],"info":[["HTTParty","","HTTParty.html","",""],["HTTParty::ClassMethods","","HTTParty/ClassMethods.html","",""],["HTTParty::Request","","HTTParty/Request.html","",""],["WuParty","","WuParty.html","",""],["WuParty::ConnectionError","","WuParty/ConnectionError.html","","<p>Represents a general error connecting to the Wufoo service\n"],["WuParty::Form","","WuParty/Form.html","","<p>Wraps an individual Wufoo Form.\n<p>Instantiation\n<p>There are two ways to instantiate a Form object:\n"],["WuParty::HTTPError","","WuParty/HTTPError.html","","<p>Represents a specific error returned from Wufoo.\n"],["WuParty::Report","","WuParty/Report.html","","<p>Wraps an individual Wufoo Report.\n<p>Instantiation\n<p>There are two ways to instantiate a Report object:\n"],["WuParty::User","","WuParty/User.html","","<p>Wraps an individual Wufoo User.\n"],["[]","WuParty::Form","WuParty/Form.html#method-i-5B-5D","(id)","<p>Access form details.\n"],["[]","WuParty::Report","WuParty/Report.html#method-i-5B-5D","(id)","<p>Access report details.\n"],["[]","WuParty::User","WuParty/User.html#method-i-5B-5D","(id)","<p>Access user details.\n"],["add_webhook","WuParty","WuParty.html#method-i-add_webhook","(form_id, url, metadata = false, handshakeKey = \"\")",""],["add_webhook","WuParty::Form","WuParty/Form.html#method-i-add_webhook","(url, metadata = false, handshakeKey = \"\")",""],["comments","WuParty::Form","WuParty/Form.html#method-i-comments","(options={})","<p>Returns comment details for the form. See Wufoo API documentation for\npossible options, e.g. to filter …\n"],["count","WuParty::Form","WuParty/Form.html#method-i-count","(options={})","<p>Return entries already submitted to the form.\n<p>Supports: Same as Entries above with filtering. form.count …\n"],["delete_webhook","WuParty","WuParty.html#method-i-delete_webhook","(form_id, webhook_hash)",""],["delete_webhook","WuParty::Form","WuParty/Form.html#method-i-delete_webhook","(webhook_id)",""],["entries","WuParty::Form","WuParty/Form.html#method-i-entries","(options={})","<p>Return entries already submitted to the form.\n<p>Supports:\n\n<pre class=\"ruby\"><span class=\"ruby-operator\">-</span> <span class=\"ruby-identifier\">filtering</span><span class=\"ruby-operator\">:</span>\n<span class=\"ruby-identifier\">entries</span>(:<span class=\"ruby-identifier\">filters</span> =<span class=\"ruby-operator\">&gt;</span> [[<span class=\"ruby-string\">'Field1'</span>, <span class=\"ruby-string\">'Is_equal_to'</span>, <span class=\"ruby-operator\">...</span>\n</pre>\n"],["fields","WuParty::Form","WuParty/Form.html#method-i-fields","()","<p>Returns field details for the form.\n"],["fields","WuParty::Report","WuParty/Report.html#method-i-fields","()","<p>Returns field details for the report\n"],["flattened_fields","WuParty::Form","WuParty/Form.html#method-i-flattened_fields","(all=false)","<p>Returns fields and subfields, as a flattened array, e.g.\n\n<pre class=\"ruby\">[{<span class=\"ruby-string\">'ID'</span> =<span class=\"ruby-operator\">&gt;</span> <span class=\"ruby-string\">'Field1'</span>, <span class=\"ruby-string\">'Title'</span> =<span class=\"ruby-operator\">&gt;</span> <span class=\"ruby-string\">'Name - First'</span>, <span class=\"ruby-operator\">...</span>\n</pre>\n"],["form","WuParty","WuParty.html#method-i-form","(form_id)","<p>Returns details about the specified form.\n"],["forms","WuParty","WuParty.html#method-i-forms","()","<p>Returns list of forms and details accessible by the user account.\n"],["login","WuParty","WuParty.html#method-c-login","(integration_key, email, password, account = nil)","<p>uses the Login API to fetch a user’s API key\n"],["new","WuParty","WuParty.html#method-c-new","(account, api_key)","<p>Create a new WuParty object\n"],["report","WuParty","WuParty.html#method-i-report","(report_id)","<p>Returns details about the specified report.\n"],["reports","WuParty","WuParty.html#method-i-reports","()","<p>Returns list of reports and details accessible by the user account.\n"],["submit","WuParty::Form","WuParty/Form.html#method-i-submit","(data)","<p>Submit form data to the form. Pass data as a hash, with field ids as the\nhash keys, e.g.\n\n<pre>submit('Field1' ...</pre>\n"],["users","WuParty","WuParty.html#method-i-users","()","<p>Returns list of users and details.\n"],["widgets","WuParty::Report","WuParty/Report.html#method-i-widgets","()","<p>Returns widget details for the report\n"],["README","","README_rdoc.html","","<p>WuParty\n<p>WuParty is a fairly lightweight wrapper for Wufoo’s REST API using\nHTTParty.\n<p>API Support\n"]]}}